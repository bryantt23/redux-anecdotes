{"version":3,"sources":["reducers/anecdoteReducer.js","reducers/notificationReducer.js","components/AnecdoteForm.js","components/AnecdoteList.js","components/Notification.js","reducers/filterReducer.js","components/Filter.js","App.js","store.js","index.js"],"names":["getId","Math","random","toFixed","initialState","map","anecdote","content","id","votes","anecdoteReducer","state","action","type","payload","index","findIndex","elem","stateCopy","updatedState","concat","show","message","console","log","notificationReducer","AnecdoteForm","dispatch","useDispatch","onSubmit","e","preventDefault","target","note","value","addNote","notificationAddNote","setTimeout","name","AnecdoteList","filter","useSelector","anecdotes","sortedAnecdotes","sort","a","b","includes","input","key","onClick","anecdoteVote","notificationAddVote","Notification","notification","style","border","padding","borderWidth","filterReducer","Filter","marginBottom","onChange","event","updateFilter","App","reducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0737cfcc.chunk.js","sourcesContent":["const anecdotesAtStart = [\r\n  'If it hurts, do it more often',\r\n  'Adding manpower to a late software project makes it later!',\r\n  'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\r\n  'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\r\n  'Premature optimization is the root of all evil.',\r\n  'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\r\n];\r\n\r\nconst getId = () => (100000 * Math.random()).toFixed(0);\r\n\r\nconst asObject = anecdote => {\r\n  return {\r\n    content: anecdote,\r\n    id: getId(),\r\n    votes: (10 * Math.random()).toFixed(0)\r\n  };\r\n};\r\n\r\nconst initialState = anecdotesAtStart.map(asObject);\r\n\r\nexport const anecdoteVote = id => {\r\n  return {\r\n    type: 'VOTE',\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const addNote = content => {\r\n  return {\r\n    type: 'ADD_NOTE',\r\n    payload: content\r\n  };\r\n};\r\n\r\nconst anecdoteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'VOTE':\r\n      const id = action.payload;\r\n      let index = state.findIndex(elem => elem.id === id);\r\n      let stateCopy = [...state];\r\n      stateCopy[index].votes++;\r\n      return stateCopy;\r\n    case 'ADD_NOTE':\r\n      const content = action.payload;\r\n      const updatedState = state.concat({ content, id: getId(), votes: 0 });\r\n      return updatedState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default anecdoteReducer;\r\n","const initialState = { show: false, message: '' };\r\nconsole.log(initialState);\r\n\r\nexport const notificationAddVote = content => {\r\n  return {\r\n    type: 'ADD_VOTE_NOTIFICATION',\r\n    payload: content\r\n  };\r\n};\r\n\r\nexport const notificationAddNote = content => {\r\n  return {\r\n    type: 'ADD_NOTE_NOTIFICATION',\r\n    payload: content\r\n  };\r\n};\r\n\r\nexport const notificationHide = () => {\r\n  return {\r\n    type: 'HIDE_NOTIFICATION'\r\n  };\r\n};\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  let content, message;\r\n\r\n  switch (action.type) {\r\n    case 'ADD_VOTE_NOTIFICATION':\r\n      content = action.payload;\r\n      console.log('content from notification', content);\r\n      message = `You voted for note: ${content}`;\r\n      console.log('message', message);\r\n      return { ...state, show: true, message };\r\n    case 'ADD_NOTE_NOTIFICATION':\r\n      content = action.payload;\r\n      // console.log('content from notification', X);\r\n      message = `You created note: ${content}`;\r\n      return { ...state, show: true, message };\r\n    case 'HIDE_NOTIFICATION':\r\n      return { ...state, message: '', show: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notificationReducer;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNote } from '../reducers/anecdoteReducer';\r\nimport {\r\n  notificationAddNote,\r\n  notificationHide\r\n} from '../reducers/notificationReducer';\r\n\r\nfunction AnecdoteForm() {\r\n  const dispatch = useDispatch();\r\n\r\n  const newNote = e => {\r\n    e.preventDefault();\r\n    const content = e.target.note.value;\r\n    e.target.note.value = '';\r\n    dispatch(addNote(content));\r\n    dispatch(notificationAddNote(content));\r\n    setTimeout(() => {\r\n      dispatch(notificationHide());\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={newNote}>\r\n        <div>\r\n          <input name='note' />\r\n        </div>\r\n        <button type='submit'>create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnecdoteForm;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { anecdoteVote } from '../reducers/anecdoteReducer';\r\nimport {\r\n  notificationAddVote,\r\n  notificationHide\r\n} from '../reducers/notificationReducer';\r\n\r\nfunction AnecdoteList() {\r\n  const filter = useSelector(state => state.filter);\r\n  console.log('filter', filter);\r\n  const anecdotes = useSelector(state => state.anecdotes);\r\n  const dispatch = useDispatch();\r\n\r\n  const vote = (id, content) => {\r\n    dispatch(anecdoteVote(id));\r\n    dispatch(notificationAddVote(content));\r\n    // https://stackoverflow.com/questions/35411423/how-to-dispatch-a-redux-action-with-a-timeout\r\n    setTimeout(() => {\r\n      dispatch(notificationHide());\r\n    }, 5000);\r\n  };\r\n\r\n  let sortedAnecdotes = anecdotes\r\n    .sort((a, b) => b.votes - a.votes)\r\n    .filter(anecdote => anecdote.content.includes(filter.input));\r\n  return (\r\n    <div>\r\n      {sortedAnecdotes.map(anecdote => (\r\n        <div key={anecdote.id}>\r\n          <div>{anecdote.content}</div>\r\n          <div>\r\n            has {anecdote.votes}\r\n            <button onClick={() => vote(anecdote.id, anecdote.content)}>\r\n              vote\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnecdoteList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification);\r\n  const style = {\r\n    border: 'solid',\r\n    padding: 10,\r\n    borderWidth: 1\r\n  };\r\n  if (!notification.show) return '';\r\n\r\n  return <div style={style}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","const initialState = { input: '' };\r\nconsole.log(initialState);\r\n\r\nexport const updateFilter = input => {\r\n  return {\r\n    type: 'UPDATE_FILTER',\r\n    payload: input\r\n  };\r\n};\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_FILTER':\r\n      const input = action.payload;\r\n      return { ...state, input };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateFilter } from '../reducers/filterReducer';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const handleChange = event => {\r\n    const input = event.target.value;\r\n    console.log(input);\r\n    dispatch(updateFilter(input));\r\n    // input-field value is in variable event.target.value\r\n  };\r\n  const style = {\r\n    marginBottom: 10\r\n  };\r\n\r\n  return (\r\n    <div style={style}>\r\n      filter <input onChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport AnecdoteForm from './components/AnecdoteForm';\r\nimport AnecdoteList from './components/AnecdoteList';\r\nimport Notification from './components/Notification';\r\nimport Filter from './components/Filter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Notification />\r\n      <h2>Anecdotes</h2>\r\n      <Filter />\r\n      <AnecdoteList />\r\n      <AnecdoteForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers, createStore } from 'redux';\r\nimport anecdoteReducer from './reducers/anecdoteReducer';\r\nimport notificationReducer from './reducers/notificationReducer';\r\nimport filterReducer from './reducers/filterReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst reducer = combineReducers({\r\n  anecdotes: anecdoteReducer,\r\n  notification: notificationReducer,\r\n  filter: filterReducer\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './store.js';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}